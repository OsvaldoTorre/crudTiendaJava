// VISTA JOINS

CREATE VIEW vista_productos_detalles AS
SELECT productos.id, productos.nombre, productos.descripcion, productos.precio, productos.disponibilidad,
       detalles_venta.id AS detalle_id, detalles_venta.producto_id, detalles_venta.cantidad, detalles_venta.precio_unitario
FROM productos
JOIN detalles_venta ON productos.id = detalles_venta.producto_id;

SELECT * FROM vista_productos_detalles;

// FUNCIONE

CREATE OR REPLACE FUNCTION obtener_productos_disponibles()
  RETURNS TABLE (id INT, nombre VARCHAR, descripcion TEXT, precio INT, disponibilidad BOOLEAN)
AS $$
BEGIN
  RETURN QUERY
  SELECT productos.id, productos.nombre, productos.descripcion, productos.precio, productos.disponibilidad
  FROM productos
  WHERE productos.disponibilidad = true;
END;
$$ LANGUAGE plpgsql;

SELECT *FROM obtener_productos_disponibles();

// TRIGGER

CREATE OR REPLACE FUNCTION eliminar_producto() RETURNS TRIGGER AS $$
BEGIN
  INSERT INTO productos_eliminados (id, nombre, descripcion, precio, disponibilidad, eliminado)
  VALUES (OLD.id, OLD.nombre, OLD.descripcion, OLD.precio, OLD.disponibilidad, true);
  RETURN NULL;
END;
$$ LANGUAGE plpgsql;

CREATE TRIGGER trigger_eliminar_producto
BEFORE DELETE ON productos
FOR EACH ROW
EXECUTE FUNCTION eliminar_producto();
